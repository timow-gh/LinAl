name: linux

on:
  push:
    branches:
      - main
      - develop
      - 'develop-*'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cxx: [ g++-11, clang++-11 ]
        build_type: [ Debug, Release ]
        std: [17, 20, 23]
        include:
          - cxx: clang++-11
            cxxflags: -stdlib=libc++
            cmd_install: sudo apt install clang-11 libc++-11-dev libc++abi-11-dev ninja-build
          - cxx: g++-11
            cmd_install: sudo apt install g++-11 ninja-build

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: git checkout HEAD

      - name: Create Build Environment
        run: |
          ${{ matrix.cmd_install }}
          cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure
        working-directory: ${{runner.workspace}}/build
        env:
          CXX: ${{matrix.cxx}}
        run: |
          cmake -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DBUILD_SHARED_LIBS=OFF \
                -DCMAKE_CXX_STANDARD=${{matrix.std}} \
                -DCMAKE_CXX_FLAGS="${{ matrix.cxxflags }}" \
                $GITHUB_WORKSPACE

      - name: Build
        working-directory: ${{runner.workspace}}/build
        run: |
          threads=`nproc`
          cmake --build . --config ${{matrix.build_type}} --parallel $threads

      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: ctest -C ${{matrix.build_type}}
        env:
          CTEST_OUTPUT_ON_FAILURE: True
